<!DOCTYPE html>
<html lang="en">
<head>
    <title>CertiBrasil</title>

    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;500;600&display=swap" rel="stylesheet">
    <style media="screen">
        *,
        *:before,
        *:after{
            padding: 0;
            margin: 0;
            box-sizing: border-box;
        }
        body{
            background-color: #000000;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .background{
            position: absolute;
        }
        form{
            width: 450px;
            background-color: rgba(255,255,255,0.13);
            border-radius: 10px;
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255,255,255,0.1);
            box-shadow: 0 0 40px rgba(8,7,16,0.6);
            padding: 50px 35px;
            margin: 20px;
            color: #ffffff;
        }
        form *{
            font-family: 'Poppins',sans-serif;
            letter-spacing: 0.5px;
            outline: none;
            border: none;
            color: #ffffff;
        }
        form h3{
            font-size: 32px;
            font-weight: 500;
            line-height: 42px;
            text-align: center;
        }
        label{
            display: block;
            margin-top: 20px;
            font-size: 16px;
            font-weight: 500;
        }
        input, select{
            display: block;
            height: 50px;
            width: 100%;
            background-color: rgba(255,255,255,0.07);
            border-radius: 3px;
            padding: 0 10px;
            margin-top: 8px;
            font-size: 14px;
            font-weight: 300;
            color: #ffffff;
        }
        ::placeholder{
            color: #e5e5e5;
        }
        button{
            margin-top: 20px;
            width: 100%;
            background-color: #ffffff;
            color: #080710;
            padding: 15px 0;
            font-size: 18px;
            font-weight: 600;
            border-radius: 5px;
            cursor: pointer;
        }
        .row {
            display: flex;
            justify-content: space-between;
        }
        .row input, .row select {
            width: 48%;
        }
    </style>
    <script>
        async function fetchCoordinates(query) {
            try {
                const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${query}&format=json&limit=1`);
                if (!response.ok) throw new Error('Localização não encontrada');
                return await response.json();
            } catch (error) {
                console.error('Erro ao buscar coordenadas:', error);
                return null;
            }
        }

        async function fetchAddressFromCoordinates(lat, lon) {
            try {
                const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}`);
                if (!response.ok) throw new Error('Endereço não encontrado');
                return await response.json();
            } catch (error) {
                console.error('Erro ao buscar endereço:', error);
                return null;
            }
        }

        async function preciseSearch() {
            const logradouro = document.getElementById('logradouro').value;
            const numero = document.getElementById('numero').value || 's/n';
            const cidade = document.getElementById('cidade-endereco').value;
            const uf = document.getElementById('uf-endereco').value;
            const fullAddress = `${logradouro}, ${numero}, ${cidade}, ${uf}, Brasil`;

            const coordinates = await fetchCoordinates(fullAddress);
            if (coordinates && coordinates.length > 0) {
                document.getElementById('latitude').value = coordinates[0].lat;
                document.getElementById('longitude').value = coordinates[0].lon;
            }
        }

        async function populateAddressFieldsFromCoordinates() {
            const latitude = document.getElementById('latitude').value;
            const longitude = document.getElementById('longitude').value;
            if (latitude && longitude) {
                const addressData = await fetchAddressFromCoordinates(latitude, longitude);
                if (addressData && addressData.address) {
                    document.getElementById('logradouro').value = addressData.address.road || 'Não informado';
                    document.getElementById('bairro').value = addressData.address.neighbourhood || addressData.address.suburb || 'Não informado';
                    document.getElementById('cidade-endereco').value = addressData.address.city || addressData.address.town || 'Não informado';
                    document.getElementById('uf-endereco').value = addressData.address.state || 'Não informado';
                    document.getElementById('cep').value = addressData.address.postcode || 'Não informado';
                }
            }
        }

        async function populateAddressFieldsFromCep() {
            const cep = document.getElementById('cep').value;
            if (cep) {
                const fullAddress = `${cep}, Brasil`;
                const coordinates = await fetchCoordinates(fullAddress);
                if (coordinates && coordinates.length > 0) {
                    const addressData = await fetchAddressFromCoordinates(coordinates[0].lat, coordinates[0].lon);
                    if (addressData && addressData.address) {
                        document.getElementById('logradouro').value = addressData.address.road || 'Não informado';
                        document.getElementById('bairro').value = addressData.address.neighbourhood || addressData.address.suburb || 'Não informado';
                        document.getElementById('cidade-endereco').value = addressData.address.city || addressData.address.town || 'Não informado';
                        document.getElementById('uf-endereco').value = addressData.address.state || 'Não informado';
                        document.getElementById('cep').value = addressData.address.postcode || 'Não informado';
                        document.getElementById('latitude').value = coordinates[0].lat;
                        document.getElementById('longitude').value = coordinates[0].lon;
                    }
                }
            }
        }

        function showMainForm() {
            document.getElementById('main-form').style.display = 'block';
            document.getElementById('address-form').style.display = 'none';
            document.getElementById('iso-form').style.display = 'none';
        }

        function showAddressForm() {
            document.getElementById('main-form').style.display = 'none';
            document.getElementById('address-form').style.display = 'block';
        }

        function showISOForm() {
            document.getElementById('main-form').style.display = 'none';
            document.getElementById('iso-form').style.display = 'block';
        }

        function saveAddress() {
            const logradouro = document.getElementById('logradouro').value || 'Não informado';
            const numero = document.getElementById('numero').value || 's/n';
            const complemento = document.getElementById('complemento').value || 's/n';
            const bairro = document.getElementById('bairro').value || 'Não informado';
            const cidade = document.getElementById('cidade-endereco').value || 'Não informado';
            const uf = document.getElementById('uf-endereco').value || 'Não informado';
            const cep = document.getElementById('cep').value || 'Não informado';
            const latitude = document.getElementById('latitude').value || 'Não informado';
            const longitude = document.getElementById('longitude').value || 'Não informado';

            const address = `Logradouro: ${logradouro}, Número: ${numero}, Complemento: ${complemento}, Bairro: ${bairro}, Cidade: ${cidade}, UF: ${uf}, CEP: ${cep}, Latitude: ${latitude}, Longitude: ${longitude}`;

            const addressList = document.getElementById('endereco-list');
            const enderecoLabel = document.getElementById('endereco-label');
            if (addressList.children.length === 0) {
                enderecoLabel.style.display = 'block';
            }
            const addressItem = document.createElement('div');
            addressItem.textContent = address;
            addressItem.style.backgroundColor = 'rgba(255,255,255,0.07)';
            addressItem.style.display = 'block';
            addressItem.style.height = 'auto';
            addressItem.style.width = '100%';
            addressItem.style.borderRadius = '3px';
            addressItem.style.padding = '0 10px';
            addressItem.style.marginTop = '8px';
            addressItem.style.fontSize = '14px';
            addressItem.style.fontWeight = '300';

            addressList.appendChild(addressItem);

            document.getElementById('address-form').reset();
            showMainForm();
        }

        function saveISO() {
            const isoType = document.getElementById('iso-type').value || 'Não informado';
            const odc = document.getElementById('odc').value || 'Não informado';
            const consultor = document.getElementById('consultor').value || 'Não informado';
            const dataEfetivacao = document.getElementById('data-efetivacao').value || 'Não informado';
            const validade = document.getElementById('validade').value || 'Não informado';

            const isoDetails = `ISO: ${isoType}, ODC: ${odc}, Consultor: ${consultor}, Data de Efetivação: ${dataEfetivacao}, Validade: ${validade}`;

            const isoList = document.getElementById('iso-list');
            const isoLabel = document.getElementById('iso-label');
            if (isoList.children.length === 0) {
                isoLabel.style.display = 'block';
            }
            const isoItem = document.createElement('div');
            isoItem.textContent = isoDetails;
            isoItem.style.backgroundColor = 'rgba(255,255,255,0.07)';
            isoItem.style.display = 'block';
            isoItem.style.height = 'auto';
            isoItem.style.width = '100%';
            isoItem.style.borderRadius = '3px';
            isoItem.style.padding = '0 10px';
            isoItem.style.marginTop = '8px';
            isoItem.style.fontSize = '14px';
            isoItem.style.fontWeight = '300';

            isoList.appendChild(isoItem);

            document.getElementById('iso-form').reset();
            showMainForm();
        }

        function updateValidade() {
            const dataEfetivacao = document.getElementById('data-efetivacao').value;
            if (dataEfetivacao) {
                const validadeDate = new Date(dataEfetivacao);
                validadeDate.setFullYear(validadeDate.getFullYear() + 1);
                const validadeString = validadeDate.toISOString().split('T')[0];
                document.getElementById('validade').value = validadeString;
            } else {
                document.getElementById('validade').value = '';
            }
        }

        function formatDateBR(dateString) {
            const [year, month, day] = dateString.split('-');
            return `${day}/${month}/${year}`;
        }
    </script>
</head>
<body>
    <div class="background">
        <div class="shape"></div>
        <div class="shape"></div>
    </div>
    <form id="main-form">
        <h3>Cadastro cliente</h3>

        <label for="nome">Nome:</label>
        <input type="text" placeholder="Nome" id="nome">

        <label for="email">Email:</label>
        <input type="email" placeholder="Email" id="email">

        <label for="telefone">Telefone:</label>
        <input type="tel" placeholder="Telefone" id="telefone">

        <label for="cnpj">CNPJ:</label>
        <input type="text" placeholder="CNPJ" id="cnpj">

        <label for="endereco">Endereços</label>
        <div id="endereco-list">
            <label style="display: none;" id="endereco-label" for="enderecosCadastrados">Endereços cadastrados:</label>
        </div>
        <button type="button" onclick="showAddressForm()">Cadastrar novo endereço</button>

        <label for="iso">Certificações</label>
        <div id="iso-list">
            <label style="display: none;" id="iso-label" for="certificacoesCadastradas">Certificações Cadastradas:</label>
        </div>
        <button type="button" onclick="showISOForm()">Cadastrar nova certificação</button>

        <button type="submit">Salvar</button>
    </form>

    <form id="address-form" style="display:none;">
        <h3>Novo Endereço</h3>

        <label for="cep">CEP</label>
        <input type="text" placeholder="CEP" id="cep" onblur="populateAddressFieldsFromCep()">

        <label for="logradouro">Logradouro</label>
        <input type="text" placeholder="Logradouro" id="logradouro" onblur="preciseSearch()">

        <label for="numero">Número</label>
        <input type="text" placeholder="Número" id="numero" onblur="preciseSearch()">

        <label for="complemento">Complemento</label>
        <input type="text" placeholder="Complemento" id="complemento">

        <label for="bairro">Bairro</label>
        <input type="text" placeholder="Bairro" id="bairro" onblur="preciseSearch()">

        <label for="uf-endereco">UF</label>
        <select id="uf-endereco" style="color: #ffffff;background-color: #000000;" onchange="preciseSearch()">
            <option value="">Selecione UF</option>
            <option value="AC">AC</option>
            <option value="AL">AL</option>
            <option value="AP">AP</option>
            <option value="AM">AM</option>
            <option value="BA">BA</option>
            <option value="CE">CE</option>
            <option value="DF">DF</option>
            <option value="ES">ES</option>
            <option value="GO">GO</option>
            <option value="MA">MA</option>
            <option value="MT">MT</option>
            <option value="MS">MS</option>
            <option value="MG">MG</option>
            <option value="PA">PA</option>
            <option value="PB">PB</option>
            <option value="PR">PR</option>
            <option value="PE">PE</option>
            <option value="PI">PI</option>
            <option value="RJ">RJ</option>
            <option value="RN">RN</option>
            <option value="RS">RS</option>
            <option value="RO">RO</option>
            <option value="RR">RR</option>
            <option value="SC">SC</option>
            <option value="SP">SP</option>
            <option value="SE">SE</option>
            <option value="TO">TO</option>
        </select>

        <label for="cidade-endereco">Cidade</label>
        <input type="text" placeholder="Cidade" id="cidade-endereco" onblur="preciseSearch()">

        <label for="latitude">Latitude</label>
        <input type="text" placeholder="Latitude" id="latitude" onblur="populateAddressFieldsFromCoordinates()">

        <label for="longitude">Longitude</label>
        <input type="text" placeholder="Longitude" id="longitude" onblur="populateAddressFieldsFromCoordinates()">

        <button type="button" onclick="showMainForm()">Voltar</button>
        <button type="button" onclick="saveAddress()">Salvar Endereço</button>
    </form>

    <form id="iso-form" style="display:none;">
        <h3>Cadastro de Certificação</h3>

        <label for="iso-type">ISO</label>
        <input type="text" placeholder="ISO" id="iso-type">

        <label for="odc">ODC</label>
        <input type="text" placeholder="ODC" id="odc">

        <label for="consultor">Consultor</label>
        <input type="text" placeholder="Consultor" id="consultor">

        <label for="data-efetivacao">Data de Efetivação</label>
        <input type="date" id="data-efetivacao" onchange="updateValidade()">

        <label for="validade">Validade</label>
        <input type="date" id="validade">

        <button type="button" onclick="showMainForm()">Voltar</button>
        <button type="button" onclick="saveISO()">Salvar Certificação</button>
    </form>

    <script>
        function showMainForm() {
            document.getElementById('main-form').style.display = 'block';
            document.getElementById('address-form').style.display = 'none';
            document.getElementById('iso-form').style.display = 'none';
        }

        function showAddressForm() {
            document.getElementById('main-form').style.display = 'none';
            document.getElementById('address-form').style.display = 'block';
        }

        function showISOForm() {
            document.getElementById('main-form').style.display = 'none';
            document.getElementById('iso-form').style.display = 'block';
        }

        function saveAddress() {
            const logradouro = document.getElementById('logradouro').value || 'Não informado';
            const numero = document.getElementById('numero').value || 's/n';
            const complemento = document.getElementById('complemento').value || 's/n';
            const bairro = document.getElementById('bairro').value || 'Não informado';
            const cidade = document.getElementById('cidade-endereco').value || 'Não informado';
            const uf = document.getElementById('uf-endereco').value || 'Não informado';
            const cep = document.getElementById('cep').value || 'Não informado';
            const latitude = document.getElementById('latitude').value || 'Não informado';
            const longitude = document.getElementById('longitude').value || 'Não informado';

            const address = `Logradouro: ${logradouro}, Número: ${numero}, Complemento: ${complemento}, Bairro: ${bairro}, Cidade: ${cidade}, UF: ${uf}, CEP: ${cep}, Latitude: ${latitude}, Longitude: ${longitude}`;

            const addressList = document.getElementById('endereco-list');
            const enderecoLabel = document.getElementById('endereco-label');
            if (addressList.children.length === 0) {
                enderecoLabel.style.display = 'block';
            }
            const addressItem = document.createElement('div');
            addressItem.textContent = address;
            addressItem.style.backgroundColor = 'rgba(255,255,255,0.07)';
            addressItem.style.display = 'block';
            addressItem.style.height = 'auto';
            addressItem.style.width = '100%';
            addressItem.style.borderRadius = '3px';
            addressItem.style.padding = '0 10px';
            addressItem.style.marginTop = '8px';
            addressItem.style.fontSize = '14px';
            addressItem.style.fontWeight = '300';

            addressList.appendChild(addressItem);

            document.getElementById('address-form').reset();
            showMainForm();
        }

        function saveISO() {
            const isoType = document.getElementById('iso-type').value || 'Não informado';
            const odc = document.getElementById('odc').value || 'Não informado';
            const consultor = document.getElementById('consultor').value || 'Não informado';
            const dataEfetivacao = document.getElementById('data-efetivacao').value || 'Não informado';
            const validade = document.getElementById('validade').value || 'Não informado';

            const isoDetails = `ISO: ${isoType}, ODC: ${odc}, Consultor: ${consultor}, Data de Efetivação: ${dataEfetivacao}, Validade: ${validade}`;

            const isoList = document.getElementById('iso-list');
            const isoLabel = document.getElementById('iso-label');
            if (isoList.children.length === 0) {
                isoLabel.style.display = 'block';
            }
            const isoItem = document.createElement('div');
            isoItem.textContent = isoDetails;
            isoItem.style.backgroundColor = 'rgba(255,255,255,0.07)';
            isoItem.style.display = 'block';
            isoItem.style.height = 'auto';
            isoItem.style.width = '100%';
            isoItem.style.borderRadius = '3px';
            isoItem.style.padding = '0 10px';
            isoItem.style.marginTop = '8px';
            isoItem.style.fontSize = '14px';
            isoItem.style.fontWeight = '300';

            isoList.appendChild(isoItem);

            document.getElementById('iso-form').reset();
            showMainForm();
        }

        function updateValidade() {
            const dataEfetivacao = document.getElementById('data-efetivacao').value;
            if (dataEfetivacao) {
                const validadeDate = new Date(dataEfetivacao);
                validadeDate.setFullYear(validadeDate.getFullYear() + 1);
                const validadeString = validadeDate.toISOString().split('T')[0];
                document.getElementById('validade').value = validadeString;
            } else {
                document.getElementById('validade').value = '';
            }
        }

        function formatDateBR(dateString) {
            const [year, month, day] = dateString.split('-');
            return `${day}/${month}/${year}`;
        }
    </script>
</body>
</html>
